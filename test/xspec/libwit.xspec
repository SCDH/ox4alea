<?xml version="1.0" encoding="UTF-8"?>

<!-- Unit tests (regression tests) for libwit.xsl -->

<x:description
    xmlns:x="http://www.jenitennison.com/xslt/xspec"
    xmlns:ht="http://www.w3.org/1999/xhtml"
    xmlns:tei="http://www.tei-c.org/ns/1.0"
    xmlns:scdh="http://scdh.wwu.de/oxygen#ALEA"
    stylesheet="../../framework/xsl/libwit.xsl">

  <x:scenario label="catalogue file not present">
    <x:call function="scdh:getWitnessSiglum">
      <x:param select="'../../framework/samples'"/>
      <x:param select="'not-present.xml'"/>
      <x:param select="'#W'"/>
    </x:call>
    <x:expect
	label="returns ID"
	test="normalize-space(.) = '#W'"/>
  </x:scenario>

  <x:scenario label="directory not present">
    <x:call function="scdh:getWitnessSiglum">
      <x:param select="'../../framework/not-present'"/>
      <x:param select="'not-present.xml'"/>
      <x:param select="'#W'"/>
    </x:call>
    <x:expect
	label="returns ID"
	test="normalize-space(.) = '#W'"/>
  </x:scenario>

  <x:scenario label="getting siglum from witness catalogue">
    <x:call function="scdh:getWitnessSiglum">
      <x:param select="'../../framework/samples'"/>
      <x:param select="'WitnessCatalogue.xml'"/>
      <x:param select="'#W'"/>
    </x:call>
    <x:expect
	label="arabic VEH"
	test="normalize-space(.) = 'ڤ'"/>
  </x:scenario>


  <x:scenario label="getting siglum for empty string ID from witness catalogue">
    <x:call function="scdh:getWitnessSiglum">
      <x:param select="'../../framework/samples'"/>
      <x:param select="'WitnessCatalogue.xml'"/>
      <x:param select="''"/>
    </x:call>
    <x:expect
	label="corner case"
	test="normalize-space(.) = ''"/>
  </x:scenario>

  <x:scenario label="no separator for single siglum">
    <x:call function="scdh:getWitnessSiglum">
      <x:param select="'../../framework/samples'"/>
      <x:param select="'WitnessCatalogue.xml'"/>
      <x:param select="'#W'"/>
      <x:param select="'HAL'"/>
    </x:call>
    <x:expect
	label="arabic VEH, nothing else"
	test="normalize-space(.) = 'ڤ'"/>
  </x:scenario>

  <x:scenario label="getting multiple sigla">
    <x:call function="scdh:getWitnessSiglum">
      <x:param select="'../../framework/samples'"/>
      <x:param select="'WitnessCatalogue.xml'"/>
      <x:param select="'#W #S'"/>
      <x:param select="'HAL'"/>
    </x:call>
    <!-- TODO: make this test work -->
    <!--x:expect
	label="VEH"
	test="normalize-space(.) = 'ڤHALس'"/-->
    <x:expect
	label="arabic VEH and SEEN"
	test="normalize-space(.) = 'ڤ س'"/>
  </x:scenario>

  <x:scenario label="getting siglum sequence from witness catalogue">
    <x:call function="scdh:get-witness-siglum-seq">
      <x:param select="'../../framework/samples'"/>
      <x:param select="'WitnessCatalogue.xml'"/>
      <x:param select="'#W  #S    HAL'"/>
    </x:call>
    <!-- TODO: make these tests work! -->
    <!--x:expect
	label="sequence of 3 strings"
	test="./last() = 3"/>
    <x:expect
	label="equals to sequence"
	test="( = ('ڤ', 'س', 'HAL')"/-->
    <x:expect
	label="equals to sequence"
	test="normalize-space(.) = 'ڤ س HAL'"/>
  </x:scenario>

  <x:scenario label="getting ID for siglum from witness catalogue">
    <x:call function="scdh:get-witness-id">
      <x:param select="'../../framework/samples'"/>
      <x:param select="'WitnessCatalogue.xml'"/>
      <x:param select="'ڤ'"/>
    </x:call>
    <x:expect
	label="single ID returned"
	test="normalize-space(.) = '#W'"/>
  </x:scenario>
  
  <x:scenario label="getting IDs for multiple sigla from witness catalogue">
    <x:call function="scdh:get-witness-id">
      <x:param select="'../../framework/samples'"/>
      <x:param select="'WitnessCatalogue.xml'"/>
      <x:param select="'ڤ   س'"/>
    </x:call>
    <x:expect
	label="two IDs returned"
	test="normalize-space(.) = '#W #S'"/>
  </x:scenario>
  
  <x:scenario label="getting IDs for empty string siglum from witness catalogue">
    <x:call function="scdh:get-witness-id">
      <x:param select="'../../framework/samples'"/>
      <x:param select="'WitnessCatalogue.xml'"/>
      <x:param select="''"/>
    </x:call>
    <x:expect
	label="corner case"
	test="normalize-space(.) = ''"/>
  </x:scenario>
  
</x:description>
