@namespace xml "http://www.w3.org/XML/1998/namespace";

:root {
    --recensioncolor: magenta;
}

/* Data for the recension editor is stored in <appInfo type="oxmre">, oXby* multiple recensions editor (MRE) */


/* set the visibility of choice/seg in the text according to the information stored for the MRE:
 * the visibiblity etc. is stored in a pointer of subtype="visible"
 */

/*
choice > seg[source] {
    display: oxy_xpath("if (some $s in tokenize(//appInfo/application[@ident eq 'oxmre']/ptr[@subtype eq 'visible']/@target) satisfies matches(@source, $s)) then 'inline' else 'none'");
}
*/

choice > seg[source],
lg > choice > seg[source],
div > choice > seg[source],
*[source] {
    display: oxy_xpath("let $visible := some $s in tokenize(//appInfo/application[@ident eq 'oxmre']/ptr[@subtype eq 'visible']/@target) satisfies matches(@source, $s), $fading := boolean(some $s in tokenize(//appInfo/application[@ident eq 'oxmre']/ptr[@subtype eq 'fading']/@target) satisfies matches(@source, $s)), $current-sibling := exists(self::seg/parent::choice/seg[some $s in tokenize(@source) satisfies matches(//appInfo/application[@ident eq 'oxmre']/ptr[@subtype eq 'current']/@target, $s)]), $display-type := if (ancestor::l | ancestor::p | ancestor::head | ancestor::note) then 'inline' else 'block' return if ($visible and not($fading and $current-sibling)) then $display-type else 'none'");
}

choice > seg[source]:after,
*[source]:after {
    content: oxy_xpath("if (count(tokenize(//appInfo/application[@ident eq 'oxmre']/ptr[@subtype eq 'visible']/@target)) > 1) then concat(' ', @source) else ''");
    color: var(--recensioncolor);
}

choice > seg[source],
*[source] {
    border: oxy_xpath("if (count(tokenize(//appInfo/application[@ident eq 'oxmre']/ptr[@subtype eq 'visible']/@target)) > 1) then '1px solid var(--recensioncolor)' else 'none'");
}

choice:has( seg[source] ) {
    color: inherit;
}


/* make MRE's parameters accessible */

/* we show them in a box fixed on top of the editor window */
appInfo > application[ident = 'oxmre'] {
    visibility: visible;
    display: block !important;
    position: fixed;
    top: 0;
    width: 14em !important;
    left: 0;
    margin: 0;
    padding: 0;
    direction: ltr !important;
    border: 1px solid var(--recensioncolor);
    background-color: white;
}

appInfo > application[ident = 'oxmre'] > * {
    display: none;
}

appInfo > application[ident = 'oxmre'] > ptr,
appInfo > application[ident = 'oxmre'] > ptr:before {
    text-decoration: none;
    -oxy-display-tags: none;
    color: var(--recensioncolor);
    font-weight: 900;
}

/* make visibility and other target accessible */
appInfo > application[ident = 'oxmre'] > ptr[subtype = 'visible'],
appInfo > application[ident = 'oxmre'] > ptr[subtype = 'fading'],
appInfo > application[ident = 'oxmre'] > ptr[subtype = 'othertarget'] {
    display: block;
    content: oxy_popup(
      edit, "@target",
      values, oxy_xpath("let $recensions := /TEI/teiHeader//listWit/@xml:id ! concat('#', .) return string-join($recensions, ',')"),
      labels, oxy_xpath("let $recensions := /TEI/teiHeader//listWit/@xml:id ! concat('#', .) return string-join($recensions, ',')"),
      selectionMode, multiple
      ) !important;    
}

/* make visibility and other target accessible */
appInfo > application[ident = 'oxmre'] > ptr[subtype = 'current'] {
    display: block;
    content: oxy_popup(
      edit, "@target",
      values, oxy_xpath("let $recensions := /TEI/teiHeader//listWit/@xml:id ! concat('#', .) return string-join($recensions, ',')"),
      labels, oxy_xpath("let $recensions := /TEI/teiHeader//listWit/@xml:id ! concat('#', .) return string-join($recensions, ',')"),
      selectionMode, single
      ) !important;    
}

appInfo > application[ident = 'oxmre'] > ptr[subtype = 'visible']:before {
    content: "visible: ";
}

appInfo > application[ident = 'oxmre'] > ptr[subtype = 'fading']:before {
    content: "fading: ";
}

appInfo > application[ident = 'oxmre'] > ptr[subtype = 'othertarget']:before {
    content: "done: ";
}

appInfo > application[ident = 'oxmre'] > ptr[subtype = 'current']:before {
    content: "in progress: ";
}
